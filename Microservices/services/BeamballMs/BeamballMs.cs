using System.Collections.Generic;
using Beamable.Api.Autogenerated.Models;
using Beamable.Common;
using Beamable.Server;

namespace Beamable.BeamballMs
{
	[FederationId("default")]
	public class DefaultPlayerInitId : IFederationId;
	
	[Microservice("BeamballMs")]
	public partial class BeamballMs : Microservice , IFederatedPlayerInit<DefaultPlayerInitId>
	{
		public async Promise<PlayerInitResult> CreatePlayer(Account account, Dictionary<string, string> properties)
		{
			var name = "GuestUser";
			var gamerTag = account.gamerTags[0].gamerTag;
			
			var userAPI = AssumeNewUser(gamerTag);
			await userAPI.Services.Stats.SetStats("client", "public", "player", gamerTag, new Dictionary<string, string>(){{"player_name",name}});
			await userAPI.Services.Inventory.AddCurrency("currency.coins", 100);
			
			// Add Item
			await userAPI.Services.Inventory.AddItem("itemskin.skin1",new Dictionary<string, string>(){});
			
			var a = new PlayerInitResult();
			return a;
		}
	}
}
