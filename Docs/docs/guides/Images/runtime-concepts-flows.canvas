{
	"nodes":[
		{"id":"e44e54986bba5da8","type":"text","text":"BEAMABLE SDK - SIGN-OUT FLOW","x":2120,"y":-780,"width":581,"height":60},
		{"id":"36d1324f557a8bc4","type":"text","text":"\\[BEAM] `UBeamRuntime::SignOut(FUserSlot)`","x":2188,"y":-660,"width":446,"height":80},
		{"id":"0a948dd3a0580460","type":"text","text":"\\[BEAM] `UBeamRuntimeSubsystem::OnUserSignedOut()`","x":2187,"y":-540,"width":446,"height":80},
		{"id":"25e2ef6e2028a0fc","type":"text","text":"\\[BEAM] `UBeamRuntimeSubsystem::OnPostUserSignedOut()`","x":2153,"y":-415,"width":514,"height":85},
		{"id":"2173e51fd02f150a","type":"text","text":"","x":2820,"y":-782,"width":860,"height":682},
		{"id":"3dd6fe2455a4fa24","type":"text","text":"``UBeamBackend::TickRetryQueue`` is our automatic request retry logic; it also handles automatic token refresh in case the current auth token has expired.","x":2906,"y":-626,"width":473,"height":136},
		{"id":"728b9261e52bbb7e","type":"text","text":"`UBeamRequestTracker` is our promise-like library. It runs an cleanup ticking routine every `UBeamCoreSettings::RequestTrackerCleanUpInterval`. This basically updates\n","x":3143,"y":-448,"width":477,"height":208},
		{"id":"0f306b790c427550","type":"text","text":"BEAMABLE SDK - TICK FUNCTIONS","x":3096,"y":-750,"width":308,"height":70},
		{"id":"34851d8b4cf02aa2","type":"text","text":"The SDK is no longer ready to make authenticated Requests to Beamble using this UserSlot.","x":2120,"y":-160,"width":581,"height":100},
		{"id":"741d3323d7711c53","type":"text","text":"\\[BEAM] `UBeamRuntime::OnUserCleared(FUserSlot)` ","x":2154,"y":-280,"width":514,"height":75},
		{"id":"f9ab9711f1f987c2","type":"text","text":"\\[BEAM or GAME-MAKER] \n`UBeamRuntimeSubsystem::InitializeWhenUnrealReady()`\n\nAt this point, Unreal is fully initialized; you can load Assets, read/write files, access other subsystems, etc...","x":-560,"y":-360,"width":814,"height":118},
		{"id":"544045c7d8134508","type":"text","text":"\\[BEAM or GAME-MAKER] \n`UBeamRuntimeSubsystem::OnBeamableStarting`\n\n`UBeamContentSubsystem::OnBeamableStarting` fetches all the latest content manifest and, if `UBeamRuntimeSettings::bDownloadIndividualContentOnStart` is `true` (default), it downloads all content before advancing to the next step.","x":-560,"y":-202,"width":814,"height":182},
		{"id":"991558e0665c1573","type":"text","text":"\\[BEAM or GAME-MAKER] \nUBeamRuntime::OnStarted()`\n\nThe SDK is now Ready to make un-authenticated Requests to Beamble.","x":-560,"y":40,"width":814,"height":120},
		{"id":"a5e48656ea04641c","type":"text","text":"\\[BEAM] \nIf `UBeamCoreSettings::bAutomaticFrictionlessAuthForOwnerPlayer` is `true` we start a guest login flow (or attempt to sign in with a local account).","x":-560,"y":220,"width":814,"height":120},
		{"id":"f175364f7ad0a89d","type":"text","text":"BEAMABLE SDK - INITIALIZATION","x":-338,"y":-780,"width":371,"height":60,"color":"6"},
		{"id":"289818b4cd5fba71","type":"text","text":"\\[UE\\] Initialize Engine Subsystems","x":-338,"y":-680,"width":371,"height":60,"color":"6"},
		{"id":"3517f9264b3b20f3","type":"text","text":"\\[UE\\] Creates GameInstance & World","x":-338,"y":-580,"width":371,"height":60},
		{"id":"17d7542ac21493e6","type":"text","text":"\\[UE\\] Create ALL GameInstance Subsystems","x":-338,"y":-480,"width":371,"height":65},
		{"id":"4f667a4dfa7e69ca","type":"text","text":"\\[BEAM] \n`UBeamRuntime::Login___(FUserSlot)` OR `UBeamRuntime::SignUp___(FUserSlot)`\n\nYou can call any of the `Login/SignUp` functions in `UBeamRuntime` for beginning an authentication flow. The various supported sign-in methods are documented in the source code. The most common flows for mobile and PC are outlined at the end of this document.","x":721,"y":-780,"width":700,"height":190},
		{"id":"0ea6d3871cef0e8e","type":"text","text":"\\[BEAM or GAME-MAKER]\n`UBeamRuntimeSubsystem::OnUserSignIn()`\n\nEach individual `UBeamRuntimeSubsystem` can react to a user being signed in the moment they are signed in. These reactions happen concurrently. This means that, at this callback, each subsystem cannot depend on the reaction of other subsystems.","x":1100,"y":-495,"width":648,"height":194},
		{"id":"f3012ad76f276102","type":"text","text":"BEAMABLE SDK - AUTHENTICATION FLOW","x":781,"y":-880,"width":581,"height":60},
		{"id":"536be029b57d91ba","type":"text","text":"\\[BEAM] \nThese flows are multi-step. They will make several requests and even create a WebSocket connection. If any unrecoverable error happens during the entire process, the user slot will be cleared and you'll be back at a state where you can simply try again.","x":397,"y":-495,"width":648,"height":194},
		{"id":"72a5d4557be0e16d","type":"text","text":"\\[GAME-MAKER]\n`UBeamRuntime::OnUserReady(FUserSlot)` \n\nIn most cases, this is what Game-Makers want to implement. At this callback, all the Beamable systems are guaranteed to have finished their reactions and can provide their own guarantees about their internal state.","x":1100,"y":-111,"width":648,"height":171},
		{"id":"5590d24d3f0dd27a","type":"text","text":"\\[BEAM or GAME-MAKER] \n`UBeamRuntimeSubsystem::OnPostUserSignIn()`\n\nThis is the same as the above except it is another layer of requests that get sent out.","x":1100,"y":-271,"width":648,"height":131},
		{"id":"053650c1c89961b5","type":"text","text":"\\[BEAM or GAME-MAKER] \n`UBeamRuntime::OnReady` is called only if `FUserSlot` is the first index of `UBeamCoreSettings::RuntimeUserSlots` and its signing in for the first time in a session\n\nThe SDK is now Ready to make authenticated Requests to Beamble using the the logged on UserSlot.","x":1100,"y":100,"width":648,"height":208}
	],
	"edges":[
		{"id":"0a7cca16b50dd69a","fromNode":"289818b4cd5fba71","fromSide":"bottom","toNode":"3517f9264b3b20f3","toSide":"top"},
		{"id":"f32dabd2069df7c3","fromNode":"3517f9264b3b20f3","fromSide":"bottom","toNode":"17d7542ac21493e6","toSide":"top"},
		{"id":"42183245dc39e314","fromNode":"17d7542ac21493e6","fromSide":"bottom","toNode":"f9ab9711f1f987c2","toSide":"top"},
		{"id":"dbcc7de8a4fd14d5","fromNode":"f9ab9711f1f987c2","fromSide":"bottom","toNode":"544045c7d8134508","toSide":"top"},
		{"id":"a7e0f8cd4e7fce77","fromNode":"544045c7d8134508","fromSide":"bottom","toNode":"991558e0665c1573","toSide":"top"},
		{"id":"33eed8d576feb698","fromNode":"4f667a4dfa7e69ca","fromSide":"bottom","toNode":"536be029b57d91ba","toSide":"top","label":"Failure"},
		{"id":"2d99453cc5966dae","fromNode":"f3012ad76f276102","fromSide":"bottom","toNode":"4f667a4dfa7e69ca","toSide":"top"},
		{"id":"3ecd6b6dae4b18ba","fromNode":"4f667a4dfa7e69ca","fromSide":"bottom","toNode":"0ea6d3871cef0e8e","toSide":"top","label":"Success"},
		{"id":"1a51c06aa05bb9ed","fromNode":"0ea6d3871cef0e8e","fromSide":"bottom","toNode":"5590d24d3f0dd27a","toSide":"top"},
		{"id":"5ab421b58bedd825","fromNode":"5590d24d3f0dd27a","fromSide":"bottom","toNode":"72a5d4557be0e16d","toSide":"top"},
		{"id":"9604405c660d8273","fromNode":"72a5d4557be0e16d","fromSide":"bottom","toNode":"053650c1c89961b5","toSide":"top"},
		{"id":"4737799c9210a9dd","fromNode":"f175364f7ad0a89d","fromSide":"bottom","toNode":"289818b4cd5fba71","toSide":"top"},
		{"id":"8c1ced3b909bb5f7","fromNode":"25e2ef6e2028a0fc","fromSide":"bottom","toNode":"741d3323d7711c53","toSide":"top"},
		{"id":"982ebfb12c9fdba0","fromNode":"0a948dd3a0580460","fromSide":"bottom","toNode":"25e2ef6e2028a0fc","toSide":"top"},
		{"id":"71e364d7b74c4fa2","fromNode":"e44e54986bba5da8","fromSide":"bottom","toNode":"36d1324f557a8bc4","toSide":"top"},
		{"id":"5cb7b89152bc9937","fromNode":"36d1324f557a8bc4","fromSide":"bottom","toNode":"0a948dd3a0580460","toSide":"top"},
		{"id":"56192195f4a6b28f","fromNode":"741d3323d7711c53","fromSide":"bottom","toNode":"34851d8b4cf02aa2","toSide":"top"},
		{"id":"3a40f045dc61095a","fromNode":"991558e0665c1573","fromSide":"bottom","toNode":"a5e48656ea04641c","toSide":"top"}
	]
}